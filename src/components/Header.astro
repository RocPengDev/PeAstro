---
/**
 * Site Header Component
 * 
 * Renders the main site navigation with:
 * - Site logo and title
 * - Navigation menu (responsive)
 * - Theme toggle button
 * - Mobile hamburger menu
 * 
 * Features:
 * - Sticky positioning
 * - Theme switching (dark/light)
 * - Mobile-responsive design
 * - Smooth animations
 */
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE, SITE_CONFIG } from '../consts';
---

<header>
	<div class="header-container">
		<div class="header-left">
			<h1 class="site-title">
				<a href="/">
					<img src="/logo.png" alt="Logo" class="site-logo" />
					{SITE_TITLE}
				</a>
			</h1>
		</div>
		<div class="header-right">
			<nav class="nav-menu">
				<HeaderLink href="/">È¶ñÈ°µ</HeaderLink>
				<HeaderLink href="/about">ÂÖ≥‰∫é</HeaderLink>
			</nav>
			<button id="theme-toggle" class="theme-toggle" title="ÂàáÊç¢‰∏ªÈ¢ò">
				<span class="moon-icon">üåô</span>
				<span class="sun-icon">‚òÄÔ∏è</span>
			</button>
			<button id="mobile-menu-toggle" class="mobile-menu-toggle" title="ËèúÂçï">
				<span class="hamburger"></span>
				<span class="hamburger"></span>
				<span class="hamburger"></span>
			</button>
		</div>
	</div>
</header>

<script define:vars={{ defaultTheme: SITE_CONFIG.DEFAULT_THEME }}>
	function initTheme() {
		const themeToggle = document.getElementById('theme-toggle');
		const htmlElement = document.documentElement;
		
		// Get theme from localStorage or config default
		const getStoredTheme = () => localStorage.getItem('theme');
		const getTheme = () => {
			const stored = getStoredTheme();
			// Validate stored theme is either 'dark' or 'light'
			if (stored && (stored === 'dark' || stored === 'light')) {
				return stored;
			}
			// Return config default (guaranteed to be 'dark' or 'light')
			return defaultTheme;
		};

		// Apply theme
		const applyTheme = (theme) => {
			if (theme === 'dark') {
				htmlElement.setAttribute('data-theme', 'dark');
			} else {
				htmlElement.setAttribute('data-theme', 'light');
			}
		};

		// Theme already initialized in BaseHead, just sync if needed
		const currentTheme = htmlElement.getAttribute('data-theme');
		if (!currentTheme) {
			// Fallback if BaseHead didn't set theme
			applyTheme(getTheme());
		}

		// Theme toggle handler
		if (themeToggle) {
			themeToggle.addEventListener('click', () => {
				const currentTheme = htmlElement.getAttribute('data-theme');
				const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
				
				applyTheme(newTheme);
				localStorage.setItem('theme', newTheme);
			});
		}

	}

	// Mobile menu toggle
	function initMobileMenu() {
		const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
		const navMenu = document.querySelector('.nav-menu');
		
		if (mobileMenuToggle && navMenu) {
			mobileMenuToggle.addEventListener('click', () => {
				navMenu.classList.toggle('open');
				mobileMenuToggle.classList.toggle('open');
			});
			
			// Close menu when clicking on nav links
			const navLinks = navMenu.querySelectorAll('a');
			navLinks.forEach(link => {
				link.addEventListener('click', () => {
					navMenu.classList.remove('open');
					mobileMenuToggle.classList.remove('open');
				});
			});
		}
	}

	// Initialize both theme and mobile menu
	function init() {
		initTheme();
		initMobileMenu();
	}

	// Initialize on page load
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', init);
	} else {
		init();
	}

	// Re-initialize on navigation (for Astro's client-side routing)
	document.addEventListener('astro:page-load', init);
</script>

<style>
	header {
		position: sticky;
		top: 0;
		z-index: 100;
		background-color: var(--bg-primary);
		border-bottom: 1px solid var(--border-light);
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
	}

	.header-container {
		max-width: var(--max-width);
		margin: 0 auto;
		padding: 1rem;
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 2rem;
	}

	.header-left {
		flex: 0 0 auto;
	}

	.site-title {
		margin: 0;
		font-size: 1.5rem;
		font-weight: 700;
	}

	.site-title a {
		color: var(--primary-text);
		text-decoration: none;
		transition: color 0.2s ease;
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.site-title a:hover {
		color: var(--accent);
	}

	.site-logo {
		height: 2rem;
		width: auto;
	}

	.header-right {
		flex: 1;
		display: flex;
		align-items: center;
		justify-content: flex-end;
		gap: 1.5rem;
	}

	.nav-menu {
		display: flex;
		align-items: center;
		gap: 2rem;
	}

	.mobile-menu-toggle {
		display: none;
		flex-direction: column;
		width: 2.5rem;
		height: 2.5rem;
		border: none;
		background: none;
		cursor: pointer;
		padding: 0.5rem;
		justify-content: center;
		align-items: center;
		gap: 0.25rem;
		border-radius: 0.375rem;
		transition: background-color 0.2s ease;
	}

	.mobile-menu-toggle:hover {
		background-color: var(--bg-secondary);
	}

	.hamburger {
		display: block;
		height: 2px;
		width: 1.25rem;
		background-color: var(--primary-text);
		transition: all 0.3s ease;
		transform-origin: center;
	}

	.mobile-menu-toggle.open .hamburger:nth-child(1) {
		transform: rotate(45deg) translate(0.375rem, 0.375rem);
	}

	.mobile-menu-toggle.open .hamburger:nth-child(2) {
		opacity: 0;
	}

	.mobile-menu-toggle.open .hamburger:nth-child(3) {
		transform: rotate(-45deg) translate(0.375rem, -0.375rem);
	}

	@media (max-width: 768px) {
		.header-container {
			padding: 0.75rem 1rem;
			gap: 1rem;
		}

		.nav-menu {
			gap: 1rem;
		}

		.site-title {
			font-size: 1.25rem;
		}
	}

	@media (max-width: 768px) {
		.nav-menu {
			display: none;
			position: fixed;
			top: 100%;
			left: 0;
			right: 0;
			background-color: var(--bg-primary);
			border-top: 1px solid var(--border-light);
			flex-direction: column;
			padding: 1rem;
			box-shadow: var(--shadow-lg);
			z-index: 50;
		}

		.nav-menu.open {
			display: flex;
		}

		.mobile-menu-toggle {
			display: flex;
		}

		.theme-toggle {
			order: -1;
		}
	}
</style>
